{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialogsItems","activeLink","src","activeClassName","to","name","Message","dialog","message","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","isAuth","initialValues","validate","values","errors","length","onSubmit","setSubmitting","sendMessage","addNewMessage","touched","handleChange","handleBlur","handleSubmit","isSubmitting","fielderror","type","onChange","onBlur","value","error","disabled","mapStateToPropsForRedirect","auth","compose","connect","dispatch","newMessageBody","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,WAAa,4BAA4B,OAAS,wBAAwB,YAAc,6BAA6B,MAAQ,uBAAuB,WAAa,8B,qHCgBpPC,EAbI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,sBAAKC,UAAWC,IAAEC,aAAe,IAAMD,IAAEE,WAAzC,UACI,qBAAKH,UAAU,SAASI,IAAI,4DAC5B,cAAC,IAAD,CAASC,gBAAiBJ,IAAEE,WAAYG,GAAIR,EAA5C,SAAmDD,EAAMU,WCEtDC,EARC,SAACX,GACb,OACC,8BACG,qBAAKG,UAAWC,IAAEQ,OAAlB,SAA2BZ,EAAMa,a,eCyE1BC,EAxEQ,SAACd,GACpB,IAAIe,EAAQf,EAAMgB,YACdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYV,KAAMU,EAAEV,KAAMR,GAAIkB,EAAElB,QACzEmB,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAASV,QAASU,EAAEV,aAEnE,IAAKb,EAAMwB,OAAQ,OAAO,cAAC,IAAD,CAAUf,GAAI,WAMxC,OACI,gCACI,sBAAKN,UAAWC,IAAEc,QAAlB,UACI,qBAAKf,UAAWC,IAAEC,aAAlB,SACKY,IAEL,qBAAKd,UAAWC,IAAEQ,OAAlB,SACKS,OAKT,cAAC,IAAD,CACII,cAAe,CAACZ,QAAS,IACzBa,SAAU,SAAAC,GACN,IAAMC,EAAS,GAOf,OANKD,EAAOd,UACRe,EAAOf,QAAU,4BAEjBc,EAAOd,QAAQgB,OAAS,KACxBD,EAAOf,QAAU,kBAEde,GAEXE,SAAU,SAACH,EAAD,GAA8B,IAApBI,EAAmB,EAAnBA,eA5BV,SAACJ,GACnB3B,EAAMgC,YAAYL,EAAOd,SA4BboB,CAAcN,GACdI,GAAc,IAdtB,SAiBK,gBACKJ,EADL,EACKA,OACAC,EAFL,EAEKA,OACAM,EAHL,EAGKA,QACAC,EAJL,EAIKA,aACAC,EALL,EAKKA,WACAC,EANL,EAMKA,aACAC,EAPL,EAOKA,aAPL,OASG,eAAC,IAAD,CAAMR,SAAUO,EAAhB,UACI,8BACI,cAAC,IAAD,CACIlC,UAAYyB,EAAOf,SAAWqB,EAAQrB,SAAWe,EAAOf,QAAWT,IAAEmC,WAAa,GAClFC,KAAK,WACL9B,KAAK,UACL+B,SAAUN,EACVO,OAAQN,EACRO,MAAOhB,EAAOd,YAGtB,sBAAMV,UAAWC,IAAEwC,MAAnB,SAA2BhB,EAAOf,UAClC,8BACI,wBAAQ2B,KAAK,SAASK,SAAUP,EAAhC,sC,uCCjExBQ,EAA6B,SAAC/B,GAAD,MAAY,CACzCS,OAAQT,EAAMgC,KAAKvB,S,QCgBRwB,sBACXC,KAfkB,SAAClC,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACkC,GACtB,MAAO,CACFlB,YAAa,SAACmB,GACXD,EAASE,YAAmBD,UDRR,SAACE,GAAe,IAEtCC,EAFqC,4JAGvC,WACI,OAAKC,KAAKvD,MAAMwB,OACT,cAAC6B,EAAD,eAAeE,KAAKvD,QADI,cAAC,IAAD,CAAUS,GAAG,eAJT,GAEX+C,IAAMH,WAWtC,OAFqCJ,IAAQH,EAARG,CAAoCK,KCE9DN,CAIdlC","file":"static/js/4.c5858d70.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1l6Bv\",\"dialogsItems\":\"Dialogs_dialogsItems__1D_VF\",\"activeLink\":\"Dialogs_activeLink__AckFF\",\"dialog\":\"Dialogs_dialog__1Ct0w\",\"sendMessage\":\"Dialogs_sendMessage__1Ujso\",\"error\":\"Dialogs_error__3tJeM\",\"fielderror\":\"Dialogs_fielderror__2wRl_\"};","import React from 'react';\r\nimport s from \"./../Dialogs.module.css\"\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialogsItems + ' ' + s.activeLink}>\r\n            <img className=\"avatar\" src=\"https://cs6.pikabu.ru/avatars/404/x404070-828004264.png\"/>\r\n            <NavLink activeClassName={s.activeLink} to={path}>{props.name}</NavLink>\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from \"./../Dialogs.module.css\"\r\n\r\nconst Message = (props) => {\r\n    return (\r\n     <div>\r\n        <div className={s.dialog}>{props.message}</div>\r\n     </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\nimport s from \"./Dialogs.module.css\"\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\nimport {Redirect} from \"react-router-dom\";\n\nexport const Dialogs = (props) => {\n    let state = props.dialogsPage;\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id}/>);\n    let messagesElements = state.messages.map(m => <Message message={m.message}/>);\n\n    if (!props.isAuth) return <Redirect to={\"/Login\"}/>;\n\n    const addNewMessage = (values) => {\n        props.sendMessage(values.message);\n    }\n\n    return (\n        <div>\n            <div className={s.dialogs}>\n                <div className={s.dialogsItems}>\n                    {dialogsElements}\n                </div>\n                <div className={s.dialog}>\n                    {messagesElements}\n                </div>\n            </div>\n\n\n            <Formik\n                initialValues={{message: ''}}\n                validate={values => {\n                    const errors = {};\n                    if (!values.message) {\n                        errors.message = 'Enter you message please';\n                    }\n                    if (values.message.length > 20) {\n                        errors.message = 'Max 20 symbols';\n                    }\n                    return errors;\n                }}\n                onSubmit={(values, {setSubmitting}) => {\n                    addNewMessage(values);\n                    setSubmitting(false);\n                }}\n            >\n                {({\n                      values,\n                      errors,\n                      touched,\n                      handleChange,\n                      handleBlur,\n                      handleSubmit,\n                      isSubmitting\n                  }) => (\n                    <Form onSubmit={handleSubmit}>\n                        <div>\n                            <Field\n                                className={(errors.message && touched.message && errors.message) ? s.fielderror : \"\"}\n                                type=\"textarea\"\n                                name=\"message\"\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.message}\n                            />\n                        </div>\n                        <span className={s.error}>{errors.message}</span>\n                        <div>\n                            <button type=\"submit\" disabled={isSubmitting}>\n                                Send Message\n                            </button>\n                        </div>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    );\n}\nexport default Dialogs;\n        ","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport connect from \"react-redux/lib/connect/connect\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/Login\" />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport {sendMessageCreator} from '../../redux/dialogs-reducer';\r\nimport connect from 'react-redux/lib/connect/connect';\r\nimport Dialogs from './Dialogs';\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n         sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)\r\n(Dialogs);"],"sourceRoot":""}