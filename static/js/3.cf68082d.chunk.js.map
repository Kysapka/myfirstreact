{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","React","Component","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","styles","descriptionBlock","profilePhoto","src","photos","large","alt","aboutMe","fullName","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJob","lookingForAJobDescription","Preloader","Post","s","item","message","likesCount","MyPosts","postsElement","posts","reverse","map","p","initialValues","newPostText","validate","values","errors","length","onSubmit","setSubmitting","addPost","onAddPost","touched","handleChange","handleBlur","handleSubmit","isSubmitting","postsBlock","fielderror","type","name","error","disabled","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.cf68082d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1VR4_\",\"profilePhoto\":\"ProfileInfo_profilePhoto__1HKg6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3SzpG\",\"posts\":\"MyPosts_posts__1PSNV\",\"error\":\"MyPosts_error__3rLm9\",\"fielderror\":\"MyPosts_fielderror__3AI55\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1fZwE\"};","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n   state = {\r\n       editMode: false,\r\n       status: this.props.status\r\n\r\n   }\r\n\r\n    activateEditMode = ()  => {\r\n       this.setState({\r\n           editMode: true\r\n       });\r\n    }\r\n\r\n    deActivateEditMode = ()  => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status : e.currentTarget.value\r\n        });\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n       if (prevProps.status !== this.props.status) {\r\n       this.setState({\r\n           status: this.props.status\r\n            });\r\n       }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={ this.activateEditMode }>{this.props.status || \"Set your status here\"}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={ this.deActivateEditMode } value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from \"react\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const deActivateEditMode = ()  => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n   const onStatusChange = (e) => {\r\n       setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n            <div>\r\n                <span onDoubleClick={ activateEditMode }>{props.status || \"Set your status here\"} Yo </span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={ deActivateEditMode }\r\n                       value={status} />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport styles from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n     return (\r\n        <div>\r\n            <div className={styles.descriptionBlock}>\r\n                <img  className={styles.profilePhoto} src={props.profile.photos.large} alt={\"\"}/>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n                <div>\r\n                    Обо мне: {props.profile.aboutMe}\r\n                </div>\r\n                <div>\r\n                    Полное имя: {props.profile.fullName}\r\n                </div>\r\n                <div>\r\n                    Контакты: <div>{props.profile.contacts.facebook}</div>\r\n                    <div>{props.profile.contacts.website}</div>\r\n                    <div>{props.profile.contacts.vk}</div>\r\n                    <div>{props.profile.contacts.twitter}</div>\r\n                    <div>{props.profile.contacts.instagram}</div>\r\n                    <div>{props.profile.contacts.youtube}</div>\r\n                    <div>{props.profile.contacts.github}</div>\r\n                    <div>{props.profile.contacts.mainLink}</div>\r\n                </div>\r\n\r\n                {props.profile.lookingForAJob ?\r\n                    <div>\r\n                        Ищу работу! {props.profile.lookingForAJobDescription}\r\n                    </div> : null }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n        return (\r\n        <div className={s.item}>\r\n            <img src=\"https://cs6.pikabu.ru/avatars/404/x404070-828004264.png\" />\r\n            {props.message}\r\n            <div>\r\n                <span> {props.likesCount} likes</span>\r\n            </div>\r\n        </div>\r\n    )}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from './Post/Post';\r\nimport {Field, Form, Formik} from \"formik\";\r\n\r\n\r\nfunction MyPosts(props) {\r\n    let postsElement =\r\n        [...props.posts].reverse().map(p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n\r\n    const onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{newPostText: ''}}\r\n                validate={values => {\r\n                    const errors = {};\r\n                    if (!values.newPostText) {\r\n                        errors.newPostText = 'Enter you message please';\r\n                    }\r\n                    if (values.newPostText.length > 20) {\r\n                        errors.newPostText = 'Max 20 symbols';\r\n                    }\r\n                    return errors;\r\n                }}\r\n                onSubmit={(values, {setSubmitting}) => {\r\n                    onAddPost(values);\r\n                    setSubmitting(false);\r\n                }}\r\n            >\r\n                {({\r\n                      values,\r\n                      errors,\r\n                      touched,\r\n                      handleChange,\r\n                      handleBlur,\r\n                      handleSubmit,\r\n                      isSubmitting\r\n                  }) => (\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <div className={s.postsBlock}>\r\n                            <div>\r\n                                <h3>My posts</h3>\r\n                                <div>\r\n                                    <Field\r\n                                        className={(errors.newPostText && touched.newPostText && errors.newPostText) ? s.fielderror : \"\"}\r\n                                        type=\"textarea\"\r\n                                        name=\"newPostText\"\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.newPostText}\r\n                                    />\r\n                                </div>\r\n                                <span\r\n                                    className={s.error}> {errors.newPostText && touched.newPostText && errors.newPostText}</span>\r\n                                <div>\r\n                                    <button type=\"submit\" disabled={isSubmitting}>\r\n                                        Add Post\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div className={s.posts}>\r\n                                {postsElement}\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport MyPosts from './MyPosts';\r\nimport {addPostActionCreator} from '../../../redux/profile-reducer';\r\nimport connect from 'react-redux/lib/connect/connect';\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport connect from \"react-redux/lib/connect/connect\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n\r\n        // console.log(\"RENDER PROFILE\");\r\n\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    /*console.log('mapStateToProps PROFILE')*/\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    })\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter)(ProfileContainer);\r\n\r\n"],"sourceRoot":""}