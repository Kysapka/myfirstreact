{"version":3,"sources":["reportWebVitals.js","redux/sidebar-reducer.js","components/utils/object-helpers.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Navbar/Friends/FriendsItem/FriendsItem.jsx","components/Navbar/Friends/Friends.jsx","components/Navbar/Friends/FriendsContainer.js","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","components/common/Paginator/Paginator.js","assets/images/user.png","components/Users/User.js","components/Users/Users.js","redux/users-selectors.js","components/Users/UsersContainer.js","hoc/withSuspense.js","App.js","index.js","assets/images/preloader.gif","components/common/preloader/Preloader.js","components/Login/login.module.css","components/Navbar/Friends/FriendsItem/FriendsItem.module.css","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","redux/profile-reducer.js","redux/dialogs-reducer.js","components/Navbar/Friends/Friends.module.css","components/common/preloader/preloader.module.css","components/Users/Users.module.css","components/Navbar/Navbar.module.css","api/api.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","friends","id","name","sidebarReducer","state","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","userId","type","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","data","resultCode","usersReducer","action","followed","count","filter","SET_USER_DATA","email","login","isAuth","setAuthUserData","payload","getAuthUserData","authAPI","me","response","authReducer","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sidebarPage","usersPage","auth","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","FriendsItem","props","path","className","s","avatar","src","friendItem","activeClassName","activeLink","to","Friends","friendsElements","f","FriendsContainer","connect","Navbar","nav","item","News","Music","Settings","Header","header","loginBlock","onClick","logout","HeaderContainer","this","React","Component","password","rememberMe","alert","messages","initialValues","validate","values","errors","test","onSubmit","setSubmitting","formData","touched","handleChange","handleBlur","handleSubmit","isSubmitting","fielderror","onChange","onBlur","value","error","disabled","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","p","selectedPage","pageNumber","e","User","user","unfollow","follow","photos","small","userPhoto","some","status","Users","getUsers","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","getIsAuth","UsersContainer","Preloader","usersAPI","bind","page","totalCount","withSuspense","Suspense","fallback","ProfileContainer","lazy","DialogsContainer","App","initializeApp","render","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","ReactDOM","document","getElementById","preloader","alt","module","exports","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","posts","message","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","getProfile","getStatus","profileAPI","updateStatus","newPost","postId","SEND_MESSAGE","dialogs","sendMessageCreator","newMessageBody","body","instance","axios","withCredentials","baseURL","headers","get","post","delete","console","warn","put"],"mappings":"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","file":"static/js/main.7aababd6.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let initialState = {\r\n    friends: [\r\n        {id: 1, name: \"Pavel\"},\r\n        {id: 2, name: \"Andrey\"}\r\n    ]\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\nexport default sidebarReducer;","export const updateObjectInArray = (items, itemId,objPropName, newObjProps) => {\r\n\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../components/utils/object-helpers\";\r\n\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        let response = await apiMethod(userId);\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(actionCreator(userId));\r\n        }\r\n        dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n\r\n","import {authAPI} from \"../api/api\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n\r\n\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload:\r\n        {userId, email, login, isAuth}\r\n})\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        alert(response.data.messages[0]);\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n     switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n\r\n   let promise =  dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n           dispatch(initializedSuccess());\r\n    });\r\n\r\n}\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport sidebarReducer from './sidebar-reducer';\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage : profileReducer,\r\n    dialogsPage : dialogsReducer,\r\n    sidebarPage : sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer\r\n\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './FriendsItem.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nconst FriendsItem = (props) => {\r\n    let path = \"/friends/\" + props.id;\r\n\r\n    return  (\r\n        <div className={s.avatar}>\r\n            <div>\r\n                <img src=\"https://cs6.pikabu.ru/avatars/404/x404070-828004264.png\"/>\r\n            </div>\r\n            <div className={s.friendItem}>\r\n                <NavLink activeClassName={s.activeLink} to={path}>{props.name}</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default FriendsItem;","import React from 'react';\r\nimport s from \"./Friends.module.css\";\r\nimport FriendsItem from './FriendsItem/FriendsItem';\r\n\r\n\r\n\r\nconst Friends = (props) => {\r\n\r\n    let friendsElements = props.friends.map(f => <FriendsItem name={f.name} id={f.id} />);\r\n\r\n    return (\r\n        <div className={s.friends}>\r\n            <div>\r\n                My Friends\r\n            </div>\r\n            <div>\r\n                {friendsElements}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Friends;\r\n","import React from 'react';\r\nimport connect from 'react-redux/lib/connect/connect';\r\nimport Friends from './Friends';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        friends: state.sidebarPage.friends\r\n    }\r\n}\r\nlet mapDispatchToProps = () => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nlet FriendsContainer = connect(mapStateToProps, mapDispatchToProps)(Friends);\r\n\r\nexport default FriendsContainer;","import React from 'react';\r\nimport s from \"./Navbar.module.css\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport Friends from './Friends/Friends';\r\nimport FriendsContainer from './Friends/FriendsContainer';\r\n\r\nconst Navbar = (props) => {\r\n    return (<nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.activeLink} to=\"/profile\">Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.activeLink} to=\"/users\">Users</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.activeLink}`}>\r\n                <NavLink activeClassName={s.activeLink} to=\"/dialogs\">Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.activeLink} to=\"/news\">News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.activeLink} to=\"/music\">Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.activeLink} to=\"/settings\">Settings</NavLink>\r\n            </div>\r\n            <div>\r\n                <FriendsContainer/>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport s from \"./News.module.css\"\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport s from \"./Music.module.css\"\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport s from \"./Settings.module.css\"\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport s from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n            <img src=\"http://i13.servimg.com/u/f13/17/99/72/91/pic10.jpg\"/>\r\n\r\n    <div className={s.loginBlock}>\r\n        {props.isAuth\r\n            ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n            : <NavLink to={'/login'}>Login</NavLink>\r\n        }\r\n    </div>\r\n\r\n    </header>;\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport connect from \"react-redux/lib/connect/connect\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);\r\n","import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport s from \"./login.module.css\";\r\nimport connect from \"react-redux/lib/connect/connect\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe );\r\n\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n    return (\r\n    <div>\r\n        <Formik\r\n            initialValues={{email: '', password: '', rememberMe: ''}}\r\n            validate={values => {\r\n                const errors = {};\r\n                if (!values.email) {\r\n                    errors.email = 'Required';\r\n                } else if (\r\n                    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n                ) {\r\n                    errors.email = 'Invalid email address';\r\n                }\r\n                if (!values.password) {\r\n                    errors.password = 'Enter you password please';\r\n                }\r\n\r\n                return errors;\r\n            }}\r\n            onSubmit={(values, {setSubmitting}) => {\r\n                let formData = values;\r\n                onSubmit(formData);\r\n                setSubmitting(false);\r\n            }}\r\n        >\r\n            {({\r\n                  values,\r\n                  errors,\r\n                  touched,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n                  isSubmitting\r\n              }) => (\r\n\r\n                <Form onSubmit={handleSubmit}>\r\n                    <h1>Login</h1>\r\n                    <div>\r\n                        <Field\r\n                            className={(errors.email && touched.email && errors.email) ? s.fielderror : \"\"}\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.login}\r\n                        />\r\n                    </div>\r\n                    <span className={s.error}>{errors.email && touched.email && errors.email}</span>\r\n                    <div>\r\n                        <Field\r\n                            className={(errors.password && touched.password && errors.password) ? s.fielderror : \"\"}\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.password}\r\n                        />\r\n                    </div>\r\n                    <span className={s.error}>{errors.password && touched.password && errors.password}</span>\r\n                    <div>\r\n                        <button type=\"submit\" disabled={isSubmitting}>\r\n                            Login\r\n                        </button>\r\n                    </div>\r\n                    <div>\r\n                        <Field\r\n                            type=\"checkbox\"\r\n                            name=\"rememberMe\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />remember me\r\n                    </div>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    </div>\r\n    )\r\n};\r\nconst mapStateToProps = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, {login} )(Login);\r\n","import React, {useState} from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\n\r\n\r\n\r\n\r\nlet Paginator = ({totalItemsCount,pageSize,currentPage,onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= totalItemsCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        {portionNumber > 1 &&\r\n        <button onClick={ () => { setPortionNumber(portionNumber - 1) } }> PREV </button>}\r\n\r\n        {pages.filter(p => (p >= leftPortionPageNumber) && (p<= rightPortionPageNumber)).map(p => {\r\n                return <span className={ ({\r\n                    [styles.selectedPage] : currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}> {p} </span>\r\n            })}\r\n\r\n        {portionCount > portionNumber && <button onClick={ () => { setPortionNumber(portionNumber + 1) } }>NEXT</button>}\r\n\r\n        </div>\r\n}\r\nexport default Paginator;","export default __webpack_public_path__ + \"static/media/user.5faf09a7.png\";","import React from \"react\";\r\nimport styles from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n     return (\r\n<div>\r\n                <span>\r\n\r\n                    <div>\r\n                        <NavLink to={\"/profile/\" + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             className={styles.userPhoto}/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress\r\n                                .some(id => id === user.id)}\r\n                                      onClick={() => {\r\n                                          unfollow(user.id)\r\n                                      }}>\r\n                                Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => {\r\n                                          follow(user.id)\r\n                                      }}>\r\n                                Follow</button>}\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"user.location.country\"}</div>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n            </div>)\r\n\r\n}\r\nexport default User;","import React from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        <div>\r\n        {\r\n            users.map(u => <User user={u}\r\n                                 followingInProgress={props.followingInProgress}\r\n                                 key={u.id}\r\n                                 unfollow={props.unfollow}\r\n                                 follow={props.follow}\r\n            />)\r\n        }\r\n        </div>\r\n    </div>\r\n}\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n   return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\nexport const getIsAuth = (state) => {\r\n    return state.auth.isAuth;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {\r\n    follow, unfollow,\r\n    setCurrentPage, toggleFollowingProgress, requestUsers\r\n} from \"../../redux/users-reducer\";\r\nimport connect from \"react-redux/lib/connect/connect\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress, getIsAuth,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ?\r\n                <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        < />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        isAuth: getIsAuth(state)\r\n\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers})\r\n)(UsersContainer);","import React from \"react\";\r\nimport Preloader from \"../components/common/preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader />} >\r\n            <Component {...props} />\r\n            </React.Suspense>\r\n        };\r\n   }","import React from 'react';\r\nimport './App.css';\r\nimport {BrowserRouter, Route, withRouter} from 'react-router-dom';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport News from './components/News/News';\r\nimport Music from './components/Music/Music';\r\nimport Settings from './components/Settings/Settings';\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport connect from \"react-redux/lib/connect/connect\";\r\nimport {compose} from \"redux\";\r\nimport Preloader from \"./components/common/preloader/Preloader\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Provider from \"react-redux/lib/components/Provider\";\r\nimport store from \"./redux/redux-store\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n\r\n\r\n                    <div className=\"app-wrapper\">\r\n                        <HeaderContainer/>\r\n                        <Navbar/>\r\n                        <div className=\"app-wrapper-content\">\r\n                            <Route path=\"/dialogs\"\r\n                                   render={withSuspense(DialogsContainer)} />\r\n                            <Route path=\"/profile/:userId?\"\r\n                                   render={withSuspense(ProfileContainer)}/>\r\n                            <Route path=\"/users\"\r\n                                   render={() => <UsersContainer/>}/>\r\n                            <Route path=\"/login\"\r\n                                   render={() => <LoginPage/>}/>\r\n                            <Route path=\"/news\"\r\n                                   render={() => <News/>}/>\r\n                            <Route path=\"/music\"\r\n                                   render={() => <Music/>}/>\r\n                            <Route path=\"/settings\"\r\n                                   render={() => <Settings/>}/>\r\n                        </div>\r\n                    </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nconst AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nconst SamuraiJSApp =(props) => {\r\n    return <BrowserRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </BrowserRouter>\r\n\r\n}\r\n\r\nexport default SamuraiJSApp;\r\n","import reportWebVitals from './reportWebVitals';\r\nimport store from './redux/redux-store';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport Provider from 'react-redux/lib/components/Provider';\r\nimport SamuraiJSApp from \"./App\";\r\n\r\n    ReactDOM.render( <SamuraiJSApp />\r\n        , document.getElementById('root'))\r\n\r\n\r\n// <React.StrictMode> </React.StrictMode>,\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export default __webpack_public_path__ + \"static/media/preloader.464a6fda.gif\";","import s from \"./preloader.module.css\"\r\nimport preloader from \"../../../assets/images/preloader.gif\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = (props) => {\r\n    return <img className={s.preloader} src={preloader} alt={\"\"} />\r\n\r\n\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"login_error__1Tff2\",\"fielderror\":\"login_fielderror__3VCky\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"FriendsItem_avatar__2jZCD\",\"friendItem\":\"FriendsItem_friendItem__3A1Nx\",\"activeLink\":\"FriendsItem_activeLink__GhCzG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1_giu\",\"pageNumber\":\"Paginator_pageNumber__2AjpB\",\"selectedPage\":\"Paginator_selectedPage__2Py8e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3eE04\",\"loginBlock\":\"Header_loginBlock__1q8a_\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"Hi, how are you?\", likesCount: 12},\r\n        {id: 2, message: \"It is my first post!\", likesCount: 11},\r\n        {id: 3, message: \"Bla bla\", likesCount: 7},\r\n        {id: 4, message: \"Da da\", likesCount: 5}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case  SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case  SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case  DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: \"Dimych\"},\r\n        {id: 2, name: \"Andrey\"},\r\n        {id: 3, name: \"Sveta\"},\r\n        {id: 4, name: \"Sasha\"},\r\n        {id: 5, name: \"Viktov\"},\r\n        {id: 6, name: \"Valera\"}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"How are you?\"},\r\n        {id: 3, message: \"Yo\"},\r\n        {id: 4, message: \"Yo\"},\r\n        {id: 5, message: \"Yo\"},\r\n    ]\r\n };\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({ type: SEND_MESSAGE, newMessageBody })\r\n\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__3zxNo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__3we6-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__2FDWq\",\"selectedPage\":\"Users_selectedPage__RRlHD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2CG9v\",\"item\":\"Navbar_item__2mM00\",\"activeLink\":\"Navbar_activeLink__1J7hP\"};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"9660a6e9-744c-4376-8717-32b82016bc28\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please use profileAPI object')\r\n        return profileAPI.getProfile(userId);\r\n\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status: status});\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = true ) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe });\r\n    },\r\n\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n"],"sourceRoot":""}